package goflare

import "path/filepath"

// MainInputFileRelativePath returns the relative path to the main input file
// This is used by devwatch to determine file ownership for Go files
func (h *Goflare) MainInputFileRelativePath() string {
	return filepath.Join(h.config.RelativeInputDirectory, h.config.MainInputFile)
}

// NewFileEvent handles file change events for goflare
// This method is called by devwatch when a relevant file changes
func (h *Goflare) NewFileEvent(fileName, extension, filePath, event string) error {
	// Goflare doesn't need to handle file events directly
	// The compilation is triggered manually via shortcuts or TUI
	// We just need to implement the interface to be compatible with devwatch
	return nil
}

// SupportedExtensions returns the file extensions that goflare monitors
// For edge workers, we primarily watch .go files
func (h *Goflare) SupportedExtensions() []string {
	return []string{".go"}
}

// UnobservedFiles returns files that should be ignored by the file watcher
// These are output files generated by goflare that shouldn't trigger recompilation
func (h *Goflare) UnobservedFiles() []string {
	return []string{
		h.tw.OutputRelativePath(),
		filepath.Join(h.config.RelativeOutputDirectory, h.outputJsFileName),
	}
}
